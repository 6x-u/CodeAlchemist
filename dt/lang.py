LANGUAGES = [
    {"id": 1, "name": "Python", "ext": [".py"], "comment": "#", "multi_start": "'''", "multi_end": "'''"},
    {"id": 2, "name": "Java", "ext": [".java"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 3, "name": "C", "ext": [".c", ".h"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 4, "name": "C++", "ext": [".cpp", ".hpp", ".cc", ".cxx"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 5, "name": "C#", "ext": [".cs"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 6, "name": "JavaScript", "ext": [".js"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 7, "name": "TypeScript", "ext": [".ts"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 8, "name": "Go", "ext": [".go"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 9, "name": "Rust", "ext": [".rs"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 10, "name": "Ruby", "ext": [".rb"], "comment": "#", "multi_start": "=begin", "multi_end": "=end"},
    {"id": 11, "name": "PHP", "ext": [".php"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 12, "name": "Swift", "ext": [".swift"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 13, "name": "Kotlin", "ext": [".kt", ".kts"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 14, "name": "Dart", "ext": [".dart"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 15, "name": "Objective-C", "ext": [".m", ".mm"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 16, "name": "Scala", "ext": [".scala"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 17, "name": "Perl", "ext": [".pl", ".pm"], "comment": "#", "multi_start": "=pod", "multi_end": "=cut"},
    {"id": 18, "name": "Lua", "ext": [".lua"], "comment": "--", "multi_start": "--[[", "multi_end": "]]"},
    {"id": 19, "name": "Haskell", "ext": [".hs"], "comment": "--", "multi_start": "{-", "multi_end": "-}"},
    {"id": 20, "name": "R", "ext": [".r", ".R"], "comment": "#", "multi_start": "", "multi_end": ""},
    {"id": 21, "name": "MATLAB", "ext": [".m"], "comment": "%", "multi_start": "%{", "multi_end": "%}"},
    {"id": 22, "name": "Julia", "ext": [".jl"], "comment": "#", "multi_start": "#=", "multi_end": "=#"},
    {"id": 23, "name": "Shell / Bash", "ext": [".sh", ".bash"], "comment": "#", "multi_start": "", "multi_end": ""},
    {"id": 24, "name": "PowerShell", "ext": [".ps1"], "comment": "#", "multi_start": "<#", "multi_end": "#>"},
    {"id": 25, "name": "F#", "ext": [".fs", ".fsx"], "comment": "//", "multi_start": "(*", "multi_end": "*)"},
    {"id": 26, "name": "Elm", "ext": [".elm"], "comment": "--", "multi_start": "{-", "multi_end": "-}"},
    {"id": 27, "name": "Groovy", "ext": [".groovy"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 28, "name": "Erlang", "ext": [".erl"], "comment": "%", "multi_start": "", "multi_end": ""},
    {"id": 29, "name": "Visual Basic .NET", "ext": [".vb"], "comment": "'", "multi_start": "", "multi_end": ""},
    {"id": 30, "name": "SQL", "ext": [".sql"], "comment": "--", "multi_start": "/*", "multi_end": "*/"},
    {"id": 31, "name": "Assembly (x86)", "ext": [".asm"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 32, "name": "Assembly (ARM)", "ext": [".s"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 33, "name": "Fortran", "ext": [".f", ".f90", ".f95"], "comment": "!", "multi_start": "", "multi_end": ""},
    {"id": 34, "name": "COBOL", "ext": [".cob", ".cbl"], "comment": "*", "multi_start": "", "multi_end": ""},
    {"id": 35, "name": "Ada", "ext": [".ada", ".adb"], "comment": "--", "multi_start": "", "multi_end": ""},
    {"id": 36, "name": "Prolog", "ext": [".pl", ".pro"], "comment": "%", "multi_start": "/*", "multi_end": "*/"},
    {"id": 37, "name": "Lisp", "ext": [".lisp", ".lsp"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 38, "name": "Scheme", "ext": [".scm", ".ss"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 39, "name": "Clojure", "ext": [".clj", ".cljs"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 40, "name": "OCaml", "ext": [".ml", ".mli"], "comment": "", "multi_start": "(*", "multi_end": "*)"},
    {"id": 41, "name": "Smalltalk", "ext": [".st"], "comment": '"', "multi_start": "", "multi_end": ""},
    {"id": 42, "name": "Pascal", "ext": [".pas"], "comment": "//", "multi_start": "{", "multi_end": "}"},
    {"id": 43, "name": "Delphi", "ext": [".dpr", ".pas"], "comment": "//", "multi_start": "{", "multi_end": "}"},
    {"id": 44, "name": "Crystal", "ext": [".cr"], "comment": "#", "multi_start": "", "multi_end": ""},
    {"id": 45, "name": "Nim", "ext": [".nim"], "comment": "#", "multi_start": "#[", "multi_end": "]#"},
    {"id": 46, "name": "VHDL", "ext": [".vhd", ".vhdl"], "comment": "--", "multi_start": "", "multi_end": ""},
    {"id": 47, "name": "Verilog", "ext": [".v"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 48, "name": "ActionScript", "ext": [".as"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 49, "name": "Apex (Salesforce)", "ext": [".cls"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 50, "name": "ABAP (SAP)", "ext": [".abap"], "comment": "*", "multi_start": "", "multi_end": ""},
    {"id": 51, "name": "D", "ext": [".d"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 52, "name": "Racket", "ext": [".rkt"], "comment": ";", "multi_start": "#|", "multi_end": "|#"},
    {"id": 53, "name": "Tcl", "ext": [".tcl"], "comment": "#", "multi_start": "", "multi_end": ""},
    {"id": 54, "name": "Solidity (Ethereum)", "ext": [".sol"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 55, "name": "Hack (HHVM)", "ext": [".hack", ".hh"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 56, "name": "CoffeeScript", "ext": [".coffee"], "comment": "#", "multi_start": "###", "multi_end": "###"},
    {"id": 57, "name": "Bash scripting", "ext": [".sh"], "comment": "#", "multi_start": "", "multi_end": ""},
    {"id": 58, "name": "Batch scripting", "ext": [".bat", ".cmd"], "comment": "REM", "multi_start": "", "multi_end": ""},
    {"id": 59, "name": "Forth", "ext": [".fth", ".4th"], "comment": "\\", "multi_start": "(", "multi_end": ")"},
    {"id": 60, "name": "JuliaDB scripting", "ext": [".jl"], "comment": "#", "multi_start": "#=", "multi_end": "=#"},
    {"id": 61, "name": "Q (kdb+)", "ext": [".q"], "comment": "/", "multi_start": "", "multi_end": ""},
    {"id": 62, "name": "AWK", "ext": [".awk"], "comment": "#", "multi_start": "", "multi_end": ""},
    {"id": 63, "name": "PostScript", "ext": [".ps"], "comment": "%", "multi_start": "", "multi_end": ""},
    {"id": 64, "name": "OpenCL", "ext": [".cl"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 65, "name": "CUDA", "ext": [".cu", ".cuh"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 66, "name": "GLSL (Shading language)", "ext": [".glsl", ".vert", ".frag"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 67, "name": "Haxe", "ext": [".hx"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 68, "name": "IDL", "ext": [".idl"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 69, "name": "J", "ext": [".ijs"], "comment": "NB.", "multi_start": "", "multi_end": ""},
    {"id": 70, "name": "K", "ext": [".k"], "comment": "/", "multi_start": "", "multi_end": ""},
    {"id": 71, "name": "Nemerle", "ext": [".n"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 72, "name": "Pike", "ext": [".pike"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 73, "name": "PL/I", "ext": [".pli"], "comment": "/*", "multi_start": "/*", "multi_end": "*/"},
    {"id": 74, "name": "Rexx", "ext": [".rexx"], "comment": "/*", "multi_start": "/*", "multi_end": "*/"},
    {"id": 75, "name": "Seed7", "ext": [".s7i"], "comment": "#", "multi_start": "(*", "multi_end": "*)"},
    {"id": 76, "name": "Simula", "ext": [".sim"], "comment": "!", "multi_start": "", "multi_end": ""},
    {"id": 77, "name": "SPARK", "ext": [".adb"], "comment": "--", "multi_start": "", "multi_end": ""},
    {"id": 78, "name": "SPSS syntax", "ext": [".sps"], "comment": "*", "multi_start": "", "multi_end": ""},
    {"id": 79, "name": "Stata scripting", "ext": [".do"], "comment": "*", "multi_start": "/*", "multi_end": "*/"},
    {"id": 80, "name": "Vala", "ext": [".vala"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 81, "name": "XSLT", "ext": [".xsl", ".xslt"], "comment": "<!--", "multi_start": "<!--", "multi_end": "-->"},
    {"id": 82, "name": "Yorick", "ext": [".i"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 83, "name": "Zig", "ext": [".zig"], "comment": "//", "multi_start": "", "multi_end": ""},
    {"id": 84, "name": "Chapel", "ext": [".chpl"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 85, "name": "Coq", "ext": [".v"], "comment": "", "multi_start": "(*", "multi_end": "*)"},
    {"id": 86, "name": "LiveScript", "ext": [".ls"], "comment": "#", "multi_start": "/*", "multi_end": "*/"},
    {"id": 87, "name": "Mercury", "ext": [".m"], "comment": "%", "multi_start": "/*", "multi_end": "*/"},
    {"id": 88, "name": "Nimrod", "ext": [".nim"], "comment": "#", "multi_start": "#[", "multi_end": "]#"},
    {"id": 89, "name": "Pony", "ext": [".pony"], "comment": "//", "multi_start": "/*", "multi_end": "*/"},
    {"id": 90, "name": "PureScript", "ext": [".purs"], "comment": "--", "multi_start": "{-", "multi_end": "-}"},
    {"id": 91, "name": "Red", "ext": [".red"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 92, "name": "Rebol", "ext": [".r", ".reb"], "comment": ";", "multi_start": "", "multi_end": ""},
    {"id": 93, "name": "Ring", "ext": [".ring"], "comment": "#", "multi_start": "/*", "multi_end": "*/"},
    {"id": 94, "name": "Sather", "ext": [".sa"], "comment": "--", "multi_start": "", "multi_end": ""},
    {"id": 95, "name": "Turing", "ext": [".t"], "comment": "%", "multi_start": "", "multi_end": ""},
    {"id": 96, "name": "Wren", "ext": [".wren"], "comment": "//", "multi_start": "/*", "multi_end": "*/"}
]

def get_language_by_ext(ext):
    for lang in LANGUAGES:
        if ext.lower() in [e.lower() for e in lang["ext"]]:
            return lang
    return None

def get_language_by_id(lang_id):
    for lang in LANGUAGES:
        if lang["id"] == lang_id:
            return lang
    return None

def get_language_by_name(name):
    for lang in LANGUAGES:
        if lang["name"].lower() == name.lower():
            return lang
    return None
